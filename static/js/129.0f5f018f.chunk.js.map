{"version":3,"file":"static/js/129.0f5f018f.chunk.js","mappings":"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","sources":["webpack://divergent-web-blog/./src/pages/Main/Main.module.css?fe6f","pages/Main/Main.tsx","../node_modules/antd/es/skeleton/Button.js","../node_modules/antd/es/skeleton/Element.js","../node_modules/antd/es/skeleton/style/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"section\":\"Main_section__Gs-SY\"};","import React, { Suspense } from 'react'\r\nimport styles from './Main.module.css'\r\nimport SkeletonButton from 'antd/es/skeleton/Button'\r\nimport { Divider, Row } from 'antd'\r\nimport { Helmet } from 'react-helmet'\r\n\r\nconst Articles = React.lazy(() => import(\"./components/Articles/Articles\"))\r\nconst StatisticTable = React.lazy(() => import(\"./components/StatisticTable/StatisticTable\"))\r\n\r\nconst Main = () => {\r\n  return (\r\n    <>\r\n      <Helmet title='Статьи' />\r\n      <section className={styles.section}>\r\n        <Suspense \r\n          fallback={<Row justify='space-between' align='middle' style={{ width: '100%' }}>\r\n            {Array.from({ length: 8 }, () => Math.random()).map((item) => (\r\n              <SkeletonButton\r\n                key={item}\r\n                active\r\n                block\r\n                style={{ height: 300, width: \"100%\", margin: \"2% auto\" }}\r\n              />\r\n            ))}\r\n          </Row>}\r\n        >\r\n          <Articles />\r\n        </Suspense>\r\n\r\n        <Divider />\r\n        \r\n        <Suspense \r\n          fallback={\r\n            <SkeletonButton\r\n              active\r\n              block\r\n              style={{ height: 500, width: \"100%\" }}\r\n            />\r\n          }\r\n        >\r\n          <StatisticTable />\r\n        </Suspense>\r\n      </section>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Main","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport omit from \"rc-util/es/omit\";\nimport { ConfigContext } from '../config-provider';\nimport Element from './Element';\nimport useStyle from './style';\nconst SkeletonButton = props => {\n  const {\n    prefixCls: customizePrefixCls,\n    className,\n    rootClassName,\n    active,\n    block = false,\n    size = 'default'\n  } = props;\n  const {\n    getPrefixCls\n  } = React.useContext(ConfigContext);\n  const prefixCls = getPrefixCls('skeleton', customizePrefixCls);\n  const [wrapCSSVar, hashId, cssVarCls] = useStyle(prefixCls);\n  const otherProps = omit(props, ['prefixCls']);\n  const cls = classNames(prefixCls, `${prefixCls}-element`, {\n    [`${prefixCls}-active`]: active,\n    [`${prefixCls}-block`]: block\n  }, className, rootClassName, hashId, cssVarCls);\n  return wrapCSSVar( /*#__PURE__*/React.createElement(\"div\", {\n    className: cls\n  }, /*#__PURE__*/React.createElement(Element, Object.assign({\n    prefixCls: `${prefixCls}-button`,\n    size: size\n  }, otherProps))));\n};\nexport default SkeletonButton;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nconst Element = props => {\n  const {\n    prefixCls,\n    className,\n    style,\n    size,\n    shape\n  } = props;\n  const sizeCls = classNames({\n    [`${prefixCls}-lg`]: size === 'large',\n    [`${prefixCls}-sm`]: size === 'small'\n  });\n  const shapeCls = classNames({\n    [`${prefixCls}-circle`]: shape === 'circle',\n    [`${prefixCls}-square`]: shape === 'square',\n    [`${prefixCls}-round`]: shape === 'round'\n  });\n  const sizeStyle = React.useMemo(() => typeof size === 'number' ? {\n    width: size,\n    height: size,\n    lineHeight: `${size}px`\n  } : {}, [size]);\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: classNames(prefixCls, sizeCls, shapeCls, className),\n    style: Object.assign(Object.assign({}, sizeStyle), style)\n  });\n};\nexport default Element;","import { Keyframes, unit } from '@ant-design/cssinjs';\nimport { genStyleHooks, mergeToken } from '../../theme/internal';\nconst skeletonClsLoading = new Keyframes(`ant-skeleton-loading`, {\n  '0%': {\n    backgroundPosition: '100% 50%'\n  },\n  '100%': {\n    backgroundPosition: '0 50%'\n  }\n});\nconst genSkeletonElementCommonSize = size => ({\n  height: size,\n  lineHeight: unit(size)\n});\nconst genSkeletonElementAvatarSize = size => Object.assign({\n  width: size\n}, genSkeletonElementCommonSize(size));\nconst genSkeletonColor = token => ({\n  background: token.skeletonLoadingBackground,\n  backgroundSize: '400% 100%',\n  animationName: skeletonClsLoading,\n  animationDuration: token.skeletonLoadingMotionDuration,\n  animationTimingFunction: 'ease',\n  animationIterationCount: 'infinite'\n});\nconst genSkeletonElementInputSize = (size, calc) => Object.assign({\n  width: calc(size).mul(5).equal(),\n  minWidth: calc(size).mul(5).equal()\n}, genSkeletonElementCommonSize(size));\nconst genSkeletonElementAvatar = token => {\n  const {\n    skeletonAvatarCls,\n    gradientFromColor,\n    controlHeight,\n    controlHeightLG,\n    controlHeightSM\n  } = token;\n  return {\n    [`${skeletonAvatarCls}`]: Object.assign({\n      display: 'inline-block',\n      verticalAlign: 'top',\n      background: gradientFromColor\n    }, genSkeletonElementAvatarSize(controlHeight)),\n    [`${skeletonAvatarCls}${skeletonAvatarCls}-circle`]: {\n      borderRadius: '50%'\n    },\n    [`${skeletonAvatarCls}${skeletonAvatarCls}-lg`]: Object.assign({}, genSkeletonElementAvatarSize(controlHeightLG)),\n    [`${skeletonAvatarCls}${skeletonAvatarCls}-sm`]: Object.assign({}, genSkeletonElementAvatarSize(controlHeightSM))\n  };\n};\nconst genSkeletonElementInput = token => {\n  const {\n    controlHeight,\n    borderRadiusSM,\n    skeletonInputCls,\n    controlHeightLG,\n    controlHeightSM,\n    gradientFromColor,\n    calc\n  } = token;\n  return {\n    [`${skeletonInputCls}`]: Object.assign({\n      display: 'inline-block',\n      verticalAlign: 'top',\n      background: gradientFromColor,\n      borderRadius: borderRadiusSM\n    }, genSkeletonElementInputSize(controlHeight, calc)),\n    [`${skeletonInputCls}-lg`]: Object.assign({}, genSkeletonElementInputSize(controlHeightLG, calc)),\n    [`${skeletonInputCls}-sm`]: Object.assign({}, genSkeletonElementInputSize(controlHeightSM, calc))\n  };\n};\nconst genSkeletonElementImageSize = size => Object.assign({\n  width: size\n}, genSkeletonElementCommonSize(size));\nconst genSkeletonElementImage = token => {\n  const {\n    skeletonImageCls,\n    imageSizeBase,\n    gradientFromColor,\n    borderRadiusSM,\n    calc\n  } = token;\n  return {\n    [`${skeletonImageCls}`]: Object.assign(Object.assign({\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      verticalAlign: 'top',\n      background: gradientFromColor,\n      borderRadius: borderRadiusSM\n    }, genSkeletonElementImageSize(calc(imageSizeBase).mul(2).equal())), {\n      [`${skeletonImageCls}-path`]: {\n        fill: '#bfbfbf'\n      },\n      [`${skeletonImageCls}-svg`]: Object.assign(Object.assign({}, genSkeletonElementImageSize(imageSizeBase)), {\n        maxWidth: calc(imageSizeBase).mul(4).equal(),\n        maxHeight: calc(imageSizeBase).mul(4).equal()\n      }),\n      [`${skeletonImageCls}-svg${skeletonImageCls}-svg-circle`]: {\n        borderRadius: '50%'\n      }\n    }),\n    [`${skeletonImageCls}${skeletonImageCls}-circle`]: {\n      borderRadius: '50%'\n    }\n  };\n};\nconst genSkeletonElementButtonShape = (token, size, buttonCls) => {\n  const {\n    skeletonButtonCls\n  } = token;\n  return {\n    [`${buttonCls}${skeletonButtonCls}-circle`]: {\n      width: size,\n      minWidth: size,\n      borderRadius: '50%'\n    },\n    [`${buttonCls}${skeletonButtonCls}-round`]: {\n      borderRadius: size\n    }\n  };\n};\nconst genSkeletonElementButtonSize = (size, calc) => Object.assign({\n  width: calc(size).mul(2).equal(),\n  minWidth: calc(size).mul(2).equal()\n}, genSkeletonElementCommonSize(size));\nconst genSkeletonElementButton = token => {\n  const {\n    borderRadiusSM,\n    skeletonButtonCls,\n    controlHeight,\n    controlHeightLG,\n    controlHeightSM,\n    gradientFromColor,\n    calc\n  } = token;\n  return Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({\n    [`${skeletonButtonCls}`]: Object.assign({\n      display: 'inline-block',\n      verticalAlign: 'top',\n      background: gradientFromColor,\n      borderRadius: borderRadiusSM,\n      width: calc(controlHeight).mul(2).equal(),\n      minWidth: calc(controlHeight).mul(2).equal()\n    }, genSkeletonElementButtonSize(controlHeight, calc))\n  }, genSkeletonElementButtonShape(token, controlHeight, skeletonButtonCls)), {\n    [`${skeletonButtonCls}-lg`]: Object.assign({}, genSkeletonElementButtonSize(controlHeightLG, calc))\n  }), genSkeletonElementButtonShape(token, controlHeightLG, `${skeletonButtonCls}-lg`)), {\n    [`${skeletonButtonCls}-sm`]: Object.assign({}, genSkeletonElementButtonSize(controlHeightSM, calc))\n  }), genSkeletonElementButtonShape(token, controlHeightSM, `${skeletonButtonCls}-sm`));\n};\n// =============================== Base ===============================\nconst genBaseStyle = token => {\n  const {\n    componentCls,\n    skeletonAvatarCls,\n    skeletonTitleCls,\n    skeletonParagraphCls,\n    skeletonButtonCls,\n    skeletonInputCls,\n    skeletonImageCls,\n    controlHeight,\n    controlHeightLG,\n    controlHeightSM,\n    gradientFromColor,\n    padding,\n    marginSM,\n    borderRadius,\n    titleHeight,\n    blockRadius,\n    paragraphLiHeight,\n    controlHeightXS,\n    paragraphMarginTop\n  } = token;\n  return {\n    [`${componentCls}`]: {\n      display: 'table',\n      width: '100%',\n      [`${componentCls}-header`]: {\n        display: 'table-cell',\n        paddingInlineEnd: padding,\n        verticalAlign: 'top',\n        // Avatar\n        [`${skeletonAvatarCls}`]: Object.assign({\n          display: 'inline-block',\n          verticalAlign: 'top',\n          background: gradientFromColor\n        }, genSkeletonElementAvatarSize(controlHeight)),\n        [`${skeletonAvatarCls}-circle`]: {\n          borderRadius: '50%'\n        },\n        [`${skeletonAvatarCls}-lg`]: Object.assign({}, genSkeletonElementAvatarSize(controlHeightLG)),\n        [`${skeletonAvatarCls}-sm`]: Object.assign({}, genSkeletonElementAvatarSize(controlHeightSM))\n      },\n      [`${componentCls}-content`]: {\n        display: 'table-cell',\n        width: '100%',\n        verticalAlign: 'top',\n        // Title\n        [`${skeletonTitleCls}`]: {\n          width: '100%',\n          height: titleHeight,\n          background: gradientFromColor,\n          borderRadius: blockRadius,\n          [`+ ${skeletonParagraphCls}`]: {\n            marginBlockStart: controlHeightSM\n          }\n        },\n        // paragraph\n        [`${skeletonParagraphCls}`]: {\n          padding: 0,\n          '> li': {\n            width: '100%',\n            height: paragraphLiHeight,\n            listStyle: 'none',\n            background: gradientFromColor,\n            borderRadius: blockRadius,\n            '+ li': {\n              marginBlockStart: controlHeightXS\n            }\n          }\n        },\n        [`${skeletonParagraphCls}> li:last-child:not(:first-child):not(:nth-child(2))`]: {\n          width: '61%'\n        }\n      },\n      [`&-round ${componentCls}-content`]: {\n        [`${skeletonTitleCls}, ${skeletonParagraphCls} > li`]: {\n          borderRadius\n        }\n      }\n    },\n    [`${componentCls}-with-avatar ${componentCls}-content`]: {\n      // Title\n      [`${skeletonTitleCls}`]: {\n        marginBlockStart: marginSM,\n        [`+ ${skeletonParagraphCls}`]: {\n          marginBlockStart: paragraphMarginTop\n        }\n      }\n    },\n    // Skeleton element\n    [`${componentCls}${componentCls}-element`]: Object.assign(Object.assign(Object.assign(Object.assign({\n      display: 'inline-block',\n      width: 'auto'\n    }, genSkeletonElementButton(token)), genSkeletonElementAvatar(token)), genSkeletonElementInput(token)), genSkeletonElementImage(token)),\n    // Skeleton Block Button, Input\n    [`${componentCls}${componentCls}-block`]: {\n      width: '100%',\n      [`${skeletonButtonCls}`]: {\n        width: '100%'\n      },\n      [`${skeletonInputCls}`]: {\n        width: '100%'\n      }\n    },\n    // With active animation\n    [`${componentCls}${componentCls}-active`]: {\n      [`\n        ${skeletonTitleCls},\n        ${skeletonParagraphCls} > li,\n        ${skeletonAvatarCls},\n        ${skeletonButtonCls},\n        ${skeletonInputCls},\n        ${skeletonImageCls}\n      `]: Object.assign({}, genSkeletonColor(token))\n    }\n  };\n};\n// ============================== Export ==============================\nexport const prepareComponentToken = token => {\n  const {\n    colorFillContent,\n    colorFill\n  } = token;\n  const gradientFromColor = colorFillContent;\n  const gradientToColor = colorFill;\n  return {\n    color: gradientFromColor,\n    colorGradientEnd: gradientToColor,\n    gradientFromColor,\n    gradientToColor,\n    titleHeight: token.controlHeight / 2,\n    blockRadius: token.borderRadiusSM,\n    paragraphMarginTop: token.marginLG + token.marginXXS,\n    paragraphLiHeight: token.controlHeight / 2\n  };\n};\nexport default genStyleHooks('Skeleton', token => {\n  const {\n    componentCls,\n    calc\n  } = token;\n  const skeletonToken = mergeToken(token, {\n    skeletonAvatarCls: `${componentCls}-avatar`,\n    skeletonTitleCls: `${componentCls}-title`,\n    skeletonParagraphCls: `${componentCls}-paragraph`,\n    skeletonButtonCls: `${componentCls}-button`,\n    skeletonInputCls: `${componentCls}-input`,\n    skeletonImageCls: `${componentCls}-image`,\n    imageSizeBase: calc(token.controlHeight).mul(1.5).equal(),\n    borderRadius: 100,\n    // Large number to make capsule shape\n    skeletonLoadingBackground: `linear-gradient(90deg, ${token.gradientFromColor} 25%, ${token.gradientToColor} 37%, ${token.gradientFromColor} 63%)`,\n    skeletonLoadingMotionDuration: '1.4s'\n  });\n  return [genBaseStyle(skeletonToken)];\n}, prepareComponentToken, {\n  deprecatedTokens: [['color', 'gradientFromColor'], ['colorGradientEnd', 'gradientToColor']]\n});"],"names":["Articles","React","StatisticTable","Main","_jsxs","_Fragment","children","_jsx","Helmet","title","className","styles","Suspense","fallback","Row","justify","align","style","width","Array","from","length","Math","random","map","item","SkeletonButton","active","block","height","margin","Divider","props","prefixCls","customizePrefixCls","rootClassName","size","getPrefixCls","ConfigContext","wrapCSSVar","hashId","cssVarCls","useStyle","otherProps","omit","cls","classNames","concat","Element","Object","assign","shape","sizeCls","shapeCls","sizeStyle","lineHeight","skeletonClsLoading","Keyframes","backgroundPosition","genSkeletonElementCommonSize","unit","genSkeletonElementAvatarSize","genSkeletonColor","token","background","skeletonLoadingBackground","backgroundSize","animationName","animationDuration","skeletonLoadingMotionDuration","animationTimingFunction","animationIterationCount","genSkeletonElementInputSize","calc","mul","equal","minWidth","genSkeletonElementAvatar","skeletonAvatarCls","gradientFromColor","controlHeight","controlHeightLG","controlHeightSM","display","verticalAlign","borderRadius","genSkeletonElementInput","borderRadiusSM","skeletonInputCls","genSkeletonElementImageSize","genSkeletonElementImage","skeletonImageCls","imageSizeBase","alignItems","justifyContent","fill","maxWidth","maxHeight","genSkeletonElementButtonShape","buttonCls","skeletonButtonCls","genSkeletonElementButtonSize","genSkeletonElementButton","genBaseStyle","componentCls","skeletonTitleCls","skeletonParagraphCls","padding","marginSM","titleHeight","blockRadius","paragraphLiHeight","controlHeightXS","paragraphMarginTop","paddingInlineEnd","marginBlockStart","listStyle","genStyleHooks","skeletonToken","mergeToken","gradientToColor","colorFillContent","colorFill","color","colorGradientEnd","marginLG","marginXXS","deprecatedTokens"],"sourceRoot":""}