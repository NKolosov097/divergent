{"version":3,"file":"static/js/173.69858353.chunk.js","mappings":"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","sources":["components/ui/CommentIcon/CommentIcon.tsx","components/ui/LikeIcon/LikeIcon.tsx","webpack://divergent-web-blog/./src/pages/Article/Article.module.css?74cf","components/ui/Comment/Comment.tsx","pages/Article/Article.tsx"],"sourcesContent":["import { CommentOutlined } from \"@ant-design/icons\"\r\nimport { Col } from \"antd\"\r\n\r\ninterface ICommentIconProps {\r\n    count: number\r\n}\r\n\r\nexport const CommentIcon = ({ count }: ICommentIconProps) => {\r\n  return (\r\n    <Col style={{ display: 'flex', gap: 5 }}>\r\n      <CommentOutlined style={{ fontSize: 16 }} />\r\n      <span style={{ fontSize: 16 }}>{count}</span>\r\n    </Col>\r\n  )\r\n}\r\n","import { LikeOutlined } from \"@ant-design/icons\"\r\nimport { Col } from \"antd\"\r\n\r\ninterface ILikeProps {\r\n    count: number\r\n}\r\n\r\nexport const Like = ({ count }: ILikeProps) => {\r\n  return (\r\n    <Col style={{ display: 'flex', gap: 5 }}>\r\n      <LikeOutlined style={{ fontSize: 16 }} />\r\n      <span style={{ fontSize: 16 }}>{count}</span>\r\n    </Col>\r\n  )\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"Article_section__4GMl5\",\"createdAt\":\"Article_createdAt__c2xoH\",\"author\":\"Article_author__iy3C9\",\"title\":\"Article_title__Vt4Yp\",\"img\":\"Article_img__aFpgQ\",\"body\":\"Article_body__getO8\",\"description\":\"Article_description__g8bhN\",\"commentTitle\":\"Article_commentTitle__DJw6h\",\"commentList\":\"Article_commentList__hOUbl\",\"commentItem\":\"Article_commentItem__p219Q\"};","import { UserOutlined } from \"@ant-design/icons\"\r\nimport { Col, Row } from \"antd\"\r\nimport { IComment } from \"../../../types/types\"\r\n\r\nexport const Comment = ({ author, createdAt, body }: IComment) => {\r\n  return (\r\n    <Row align='top' justify='start' style={{ flexWrap: 'nowrap' }}>\r\n        <Col>\r\n            <UserOutlined />\r\n        </Col>\r\n        <Col style={{ marginLeft: 10 }}>\r\n            <Row align='middle' justify='start'>\r\n                <span style={{ opacity: 0.7 }}>{createdAt}</span>\r\n                <span style={{ marginLeft: 10 }}>{author}</span>\r\n            </Row>\r\n            <Row>\r\n                {body}\r\n            </Row>\r\n        </Col>\r\n    </Row>\r\n  )\r\n}\r\n","import { Button, Col, Divider, Row, message } from 'antd'\r\nimport styles from './Article.module.css'\r\nimport { ReadOutlined } from '@ant-design/icons'\r\nimport { useAppDispatch, useAppSelector } from '../../redux/hooks'\r\nimport { articleActions, getArticleById } from '../../redux/slices/articles'\r\nimport { useParams } from 'react-router-dom'\r\nimport Title from 'antd/es/typography/Title'\r\nimport { CommentIcon } from '../../components/ui/CommentIcon/CommentIcon'\r\nimport { Like } from '../../components/ui/LikeIcon/LikeIcon'\r\nimport { Comment } from '../../components/ui/Comment/Comment'\r\nimport Form, { useForm } from 'antd/es/form/Form'\r\nimport FormItem from 'antd/es/form/FormItem'\r\nimport TextArea from 'antd/es/input/TextArea'\r\nimport { Helmet } from 'react-helmet'\r\n\r\nconst Article = () => {\r\n  const { id } = useParams() \r\n  const article = useAppSelector(state => getArticleById(state, id ?? ''))\r\n\r\n  const dispatch = useAppDispatch()\r\n\r\n  const addComment = (data: { comment: string }) => {\r\n    dispatch(articleActions.addComment({\r\n      articleId: id, \r\n      author: 'Колосов Никита',\r\n      comment: data?.comment, \r\n      createdAt: '23.05.2024'\r\n    }))\r\n\r\n    form.resetFields()\r\n  }\r\n\r\n  const [form] = useForm();\r\n  \r\n  return (\r\n    <>\r\n    <Helmet title={article?.title}/>\r\n      <section className={styles.section}>\r\n        <Row justify='start' style={{ marginTop: 20 }}>\r\n          <Col>\r\n            <ReadOutlined style={{ color: 'orange', fontSize: '4em' }} />\r\n          </Col>\r\n\r\n          <Col style={{ marginLeft: 10, flex: 1 }}>\r\n            <span className={styles.createdAt}>\r\n              {article?.createdAt}\r\n            </span>\r\n            <span className={styles.author}>\r\n              Автор: {article?.author}\r\n            </span>\r\n            <Title \r\n              level={1}\r\n              ellipsis={{ \r\n                rows: 2, \r\n                expandable: true, \r\n                symbol: (expanded) => expanded ? \"скрыть\" : 'раскрыть'\r\n              }} \r\n              className={styles.title}\r\n            >{article?.title}</Title>\r\n          </Col>\r\n\r\n          <Col>\r\n              <Like count={article?.likes} />\r\n              <CommentIcon count={article?.comments?.length} />\r\n          </Col>\r\n        </Row>\r\n\r\n        <Divider style={{ margin: '10px 0' }} />\r\n\r\n        <img\r\n          src={article?.photoUrl}\r\n          alt={article?.title}\r\n          className={styles.img}\r\n        />\r\n\r\n        <Row>\r\n          <p className={styles.body}>{article?.body}</p>\r\n          <p className={styles.description}>{article?.description}</p>\r\n        </Row>\r\n\r\n        <Row>\r\n          <Title level={3} className={styles.commentTitle}>\r\n            Комментарии\r\n          </Title>\r\n          <ul className={styles.commentList}>\r\n            {article?.comments?.map(comment => (\r\n              <li key={comment?.id} className={styles.commentItem}>\r\n                <Comment {...comment}  />\r\n              </li>\r\n            ))}\r\n            <Row style={{ width: '100%' }}>\r\n              <Form\r\n                  form={form}\r\n                  layout=\"vertical\"\r\n                  style={{ width: '100%' }}\r\n                  onFinish={addComment}\r\n              >\r\n                  <FormItem \r\n                    name='comment'\r\n                    rules={[\r\n                      {\r\n                        validator: (rule, value) => {\r\n                          if (!value.trim()) {\r\n                            return Promise.reject(rule.message);\r\n                          }\r\n                          return Promise.resolve();\r\n                        },\r\n                        message: \"Введите комментарий\",\r\n                      },\r\n                    ]}\r\n                    style={{ width: '100%' }}\r\n                  >\r\n                      <TextArea autoSize placeholder=\"Вы можете оставить здесь свой комментарий\" style={{ minHeight: 80 }} />\r\n                  </FormItem>\r\n                  <Row justify='start' align='middle'>\r\n                    <Button \r\n                      type='primary' \r\n                      onClick={() => {\r\n                        form.submit()\r\n                        message.info({ \r\n                          content: 'Я не успел доделать добавление комментариев 😔',\r\n                          duration: 4\r\n                        })\r\n                      }}\r\n                    >\r\n                        Сохранить комментарий\r\n                    </Button>\r\n                  </Row>\r\n              </Form>\r\n              </Row>\r\n          </ul>\r\n        </Row>\r\n      </section>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Article"],"names":["CommentIcon","_ref","count","_jsxs","Col","style","display","gap","children","_jsx","CommentOutlined","fontSize","Like","LikeOutlined","Comment","author","createdAt","body","Row","align","justify","flexWrap","UserOutlined","marginLeft","opacity","Article","_article$comments","_article$comments2","id","useParams","article","useAppSelector","state","getArticleById","dispatch","useAppDispatch","form","useForm","_Fragment","Helmet","title","className","styles","marginTop","ReadOutlined","color","flex","Title","level","ellipsis","rows","expandable","symbol","expanded","likes","comments","length","Divider","margin","src","photoUrl","alt","description","map","comment","width","Form","layout","onFinish","data","articleActions","addComment","articleId","resetFields","FormItem","name","rules","validator","rule","value","trim","Promise","resolve","reject","message","TextArea","autoSize","placeholder","minHeight","Button","type","onClick","submit","info","content","duration"],"sourceRoot":""}