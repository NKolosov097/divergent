{"version":3,"file":"static/js/759.b55e1752.chunk.js","mappings":"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","sources":["components/ui/CommentIcon/CommentIcon.tsx","components/ui/LikeIcon/LikeIcon.tsx","webpack://divergent-web-blog/./src/pages/Main/components/Articles/Articles.module.css?710f","pages/Main/components/Articles/Articles.tsx"],"sourcesContent":["import { CommentOutlined } from \"@ant-design/icons\"\r\nimport { Col } from \"antd\"\r\n\r\ninterface ICommentIconProps {\r\n    count: number\r\n}\r\n\r\nexport const CommentIcon = ({ count }: ICommentIconProps) => {\r\n  return (\r\n    <Col style={{ display: 'flex', gap: 5 }}>\r\n      <CommentOutlined style={{ fontSize: 16 }} />\r\n      <span style={{ fontSize: 16 }}>{count}</span>\r\n    </Col>\r\n  )\r\n}\r\n","import { LikeOutlined } from \"@ant-design/icons\"\r\nimport { Col } from \"antd\"\r\n\r\ninterface ILikeProps {\r\n    count: number\r\n}\r\n\r\nexport const Like = ({ count }: ILikeProps) => {\r\n  return (\r\n    <Col style={{ display: 'flex', gap: 5 }}>\r\n      <LikeOutlined style={{ fontSize: 16 }} />\r\n      <span style={{ fontSize: 16 }}>{count}</span>\r\n    </Col>\r\n  )\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"articleList\":\"Articles_articleList__vwacd\",\"card\":\"Articles_card__BFAa1\",\"cardTitle\":\"Articles_cardTitle__xgLLG\",\"imgBtn\":\"Articles_imgBtn__hBzsc\",\"cardImg\":\"Articles_cardImg__CKfRD\",\"action\":\"Articles_action__C7p+P\",\"editBtn\":\"Articles_editBtn__0AAjC\"};","import { Button, Card, Col, Popover, Row, Typography } from \"antd\"\r\nimport styles from './Articles.module.css'\r\nimport Meta from \"antd/es/card/Meta\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useAppDispatch, useAppSelector } from \"../../../../redux/hooks\";\r\nimport { articleActions, articleSelector } from \"../../../../redux/slices/articles\";\r\nimport { Like } from \"../../../../components/ui/LikeIcon/LikeIcon\";\r\nimport { CommentIcon } from \"../../../../components/ui/CommentIcon/CommentIcon\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { IArticle } from \"../../../../types/types\";\r\nimport Input from \"antd/es/input/Input\";\r\nimport { PlusCircleOutlined } from \"@ant-design/icons\";\r\nimport Modal from \"antd/es/modal/Modal\";\r\nimport Form, { useForm } from \"antd/es/form/Form\";\r\nimport FormItem from \"antd/es/form/FormItem\";\r\nimport TextArea from \"antd/es/input/TextArea\";\r\nimport { v4 as uuid } from 'uuid'\r\n\r\nconst Articles = () => {\r\n  const dispatch = useAppDispatch()\r\n  const articles = useAppSelector(articleSelector)\r\n  const [filterArticles, setFilterArticles] = useState<IArticle[]>(articles)\r\n\r\n  useEffect(() => {\r\n        setFilterArticles(articles)\r\n    }, [articles])\r\n\r\n  const [isOpenedModal, setIsOpenedModal] = useState<boolean>(false)\r\n  const [form] = useForm()\r\n\r\n  const navigate = useNavigate()\r\n\r\n   const size = [\r\n    { xl: 10, md: 12 },\r\n    { xl: 14, md: 12 },\r\n    { xl: 14, md: 12 },\r\n    { xl: 10, md: 12 },\r\n    { xl: 12, md: 12 },\r\n    { xl: 12, md: 12 },\r\n  ];\r\n\r\n  const getSize = (i: number) => \r\n    size.length <= i ? i - Math.floor(i / size.length) * size.length : i;\r\n\r\n  const addComment = async (data: IArticle) => {\r\n    const newArticle: IArticle = {\r\n      id: uuid(),\r\n      photoUrl: '',\r\n      title: data?.title,\r\n      body: data?.body,\r\n      author: data?.author,\r\n      description: data?.description,\r\n      comments: [],\r\n      createdAt: new Date().toLocaleDateString(),\r\n      likes: 0\r\n    }\r\n\r\n    dispatch(articleActions.addArticle(newArticle))\r\n    setIsOpenedModal(false)  \r\n    form.resetFields()  \r\n  } \r\n\r\n  return (\r\n    <>\r\n      <Row \r\n        justify='space-evenly' \r\n        align='middle' \r\n        style={{ \r\n          width: '100%', \r\n          marginTop: 20, \r\n          gap: 20, \r\n          padding: '0 10px' \r\n        }}\r\n      >\r\n        <Input \r\n          style={{ flex: 1 }}\r\n          placeholder=\"Поиск по статьям\" \r\n          onChange={(e) =>  {\r\n            if (e?.target?.value === \"\") {\r\n                setFilterArticles(articles)\r\n            } else {\r\n              setFilterArticles(articles.filter(art => \r\n              art\r\n                ?.title\r\n                ?.toLowerCase()\r\n                ?.includes(e?.target?.value?.toLowerCase())\r\n              ))\r\n            }\r\n          }}\r\n        />\r\n        <Popover trigger='hover' content=\"Добавление статьи\">\r\n          <Button \r\n            icon={<PlusCircleOutlined />} \r\n            onClick={() => setIsOpenedModal(true)}\r\n          />\r\n        </Popover>\r\n      </Row>\r\n      <ul className={styles.articleList}>\r\n            {filterArticles?.map((article, index) => (\r\n              <Col\r\n                key={article.id}\r\n                xl={size[getSize(index)].xl}\r\n                md={size[getSize(index)].md}\r\n                xs={24}\r\n                role=\"listitem\"\r\n                style={{ margin: '10px 0', minHeight: 'auto' }}\r\n              >\r\n                <Card\r\n                  hoverable\r\n                  bordered\r\n                  cover={\r\n                    <div style={{ position: \"relative\" }}>\r\n                      <Button\r\n                        type=\"text\"\r\n                        className={styles.imgBtn}\r\n                        onClick={() => navigate(`/divergent/articles/${article.id}`)}\r\n                      >\r\n                        <img\r\n                          src={article?.photoUrl}\r\n                          className={styles.cardImg}\r\n                          alt={article?.title}\r\n                        />\r\n                      </Button>\r\n                    </div>\r\n                  }\r\n                  className={styles.card}\r\n                >\r\n                  <Meta\r\n                    title={\r\n                      <Typography.Paragraph\r\n                        ellipsis={{\r\n                          rows: 1,\r\n                          suffix: \"\",\r\n                          symbol: \"ещё\",\r\n                          expandable: true,\r\n                        }}\r\n                        className={styles.cardTitle}\r\n                      >\r\n                        {article?.title}\r\n                      </Typography.Paragraph>\r\n                    }\r\n                    description={\r\n                      <>\r\n                        <Row className={styles.contentContainer}>\r\n                          <Row className={styles.action} justify=\"space-between\" align=\"middle\">\r\n                            <span className={styles.dateTime}>\r\n                              {article?.createdAt}\r\n                            </span>\r\n\r\n                            <Row style={{ gap: 10 }}>\r\n                              <Like\r\n                                count={article?.likes}\r\n                              />\r\n                              <CommentIcon count={article?.comments?.length} />\r\n                            </Row>\r\n                          </Row>\r\n                        </Row>\r\n                        <Row style={{ paddingLeft: 10 }}>Автор: {article?.author}</Row>\r\n                      </>\r\n                    }\r\n                  />\r\n                </Card>\r\n              </Col>\r\n            ))}\r\n      </ul>\r\n\r\n        <Modal \r\n          open={isOpenedModal}\r\n          title=\"Создание статьи\"\r\n          footer={null}\r\n          onCancel={() => {\r\n            setIsOpenedModal(false)\r\n            form.resetFields()\r\n          }}\r\n        >\r\n          <Form\r\n            form={form}\r\n            onFinish={addComment}\r\n            layout=\"vertical\"\r\n          >\r\n            <FormItem \r\n              label=\"Название\" \r\n              name='title'\r\n              rules={[\r\n                {\r\n                  validator: (rule, value) => {\r\n                    if (!value.trim()) {\r\n                      return Promise.reject(rule.message);\r\n                    }\r\n                    return Promise.resolve();\r\n                  },\r\n                  message: \"Введите название статьи\",\r\n                },\r\n              ]}\r\n            >\r\n              <TextArea autoSize placeholder=\"Название статьи\" />\r\n            </FormItem>\r\n\r\n            <FormItem \r\n              label=\"Статья\" \r\n              name='body'\r\n              rules={[\r\n                {\r\n                  validator: (rule, value) => {\r\n                    if (!value.trim()) {\r\n                      return Promise.reject(rule.message);\r\n                    }\r\n                    return Promise.resolve();\r\n                  },\r\n                  message: \"Введите статью\",\r\n                },\r\n              ]}\r\n            >\r\n              <TextArea autoSize placeholder=\"Статья\" />\r\n            </FormItem>\r\n\r\n            <FormItem \r\n              label=\"Автор\" \r\n              name='author'\r\n              rules={[\r\n                {\r\n                  validator: (rule, value) => {\r\n                    if (!value.trim()) {\r\n                      return Promise.reject(rule.message);\r\n                    }\r\n                    return Promise.resolve();\r\n                  },\r\n                  message: \"Введите автора статьи\",\r\n                },\r\n              ]}\r\n            >\r\n              <TextArea autoSize placeholder=\"Автор\" />\r\n            </FormItem>\r\n\r\n            <FormItem \r\n              label=\"Описание\" \r\n              name='description'\r\n            >\r\n              <TextArea autoSize placeholder=\"Описание статьи\" />\r\n            </FormItem>\r\n\r\n            <Row justify='end' align='middle' style={{ gap: 20 }}>\r\n              <Button \r\n                type=\"primary\" \r\n                onClick={() => form.submit()}\r\n              >\r\n                Опубликовать\r\n              </Button>\r\n\r\n              <Button \r\n                onClick={() => {\r\n                  setIsOpenedModal(false)\r\n                  form.resetFields()\r\n                }}\r\n              >\r\n                Отмена\r\n              </Button>\r\n            </Row>\r\n          </Form>\r\n        </Modal>\r\n      </>\r\n  )\r\n}\r\n\r\nexport default Articles"],"names":["CommentIcon","_ref","count","_jsxs","Col","style","display","gap","children","_jsx","CommentOutlined","fontSize","Like","LikeOutlined","Articles","dispatch","useAppDispatch","articles","useAppSelector","articleSelector","filterArticles","setFilterArticles","useState","useEffect","isOpenedModal","setIsOpenedModal","form","useForm","navigate","useNavigate","size","xl","md","getSize","i","length","Math","floor","_Fragment","Row","justify","align","width","marginTop","padding","Input","flex","placeholder","onChange","e","_e$target","target","value","filter","art","_art$title","_art$title$toLowerCas","_e$target2","_e$target2$value","title","toLowerCase","includes","Popover","trigger","content","Button","icon","PlusCircleOutlined","onClick","className","styles","articleList","map","article","index","_article$comments","xs","role","margin","minHeight","Card","hoverable","bordered","cover","position","type","imgBtn","concat","id","src","photoUrl","cardImg","alt","card","Meta","Typography","Paragraph","ellipsis","rows","suffix","symbol","expandable","cardTitle","description","contentContainer","action","dateTime","createdAt","likes","comments","paddingLeft","author","Modal","open","footer","onCancel","resetFields","Form","onFinish","async","newArticle","uuid","data","body","Date","toLocaleDateString","articleActions","addArticle","layout","FormItem","label","name","rules","validator","rule","trim","Promise","resolve","reject","message","TextArea","autoSize","submit"],"sourceRoot":""}